{"version":3,"sources":["components/contentHead/contentHeader.js","views/profile/profile.js","redux/actions/graphql/profile.js","containers/profile.js"],"names":["ContentHeader","props","className","react_default","a","createElement","concat","undefined","children","formSchema","Yup","shape","firstName","required","lastName","jetmanId","matches","description","company","Profile","handleSubmit","_callee","values","regenerator_default","wrap","_context","prev","next","_this","fillBrokerInfo","fetchCurrentUser","stop","this","_this$props","_this$props$brokerInf","brokerInfo","react","contentHeader","reactstrap_es","sm","formik_esm","initialValues","Object","objectSpread","validationSchema","onSubmit","_ref2","errors","touched","for","name","id","type","Component","actions","variables","asyncToGenerator","mark","dispatch","getState","_ref","graphqlRequest","history","response","start","payload","sent","error","abrupt","handleError","success","data","replace","_x","_x2","_x3","apply","arguments","_ref4","_callee2","_ref3","_context2","me","_x4","_x5","_x6","forEach","item","toLowerCase","toUpperCase","connect","state","dashboard","bindActionCreators","actionCreators"],"mappings":"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","file":"static/js/3.822b6e7a.chunk.js","sourcesContent":["import React from \"react\";\n\nconst ContentHeader = props => {\n  const {className} = props;\n   return (\n      <div\n         className={`content-header${\n            className === undefined ? \"\" : ` ${className}`\n         }`}\n      >\n         {props.children}\n      </div>\n   );\n};\n\nexport default ContentHeader;\n","import React, {Component, Fragment} from 'react';\nimport {Card, CardBody, Row, Col, Button, FormGroup, Label} from 'reactstrap';\nimport {Formik, Field, Form} from 'formik';\nimport * as Yup from 'yup';\n\nimport ContentHeader from '../../components/contentHead/contentHeader';\n\nconst formSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .required('Required'),\n  lastName: Yup.string()\n    .required('Required'),\n  jetmanId: Yup.string()\n    .matches(/^[a-z]+$/, 'Can contain only lowercase english letters')\n    .required('Required'),\n  description: Yup.string()\n    .required('Required'),\n  company: Yup.string()\n    .required('Required')\n});\n\nclass Profile extends Component {\n  componentDidMount() {\n    this.props.fetchCurrentUser();\n  }\n\n  handleSubmit = async (values) => {\n    await this.props.fillBrokerInfo(values);\n    await this.props.fetchCurrentUser();\n  };\n\n  render() {\n    const {firstName, lastName, brokerInfo = {}} = this.props;\n    return (\n      <Fragment>\n        <ContentHeader>Profile</ContentHeader>\n        <Row>\n          <Col sm=\"12\">\n            <Card>\n              <CardBody>\n                <Formik\n                  initialValues={{\n                    firstName,\n                    lastName,\n                    ...brokerInfo\n                  }}\n                  validationSchema={formSchema}\n                  onSubmit={this.handleSubmit}\n                >\n                  {({errors, touched}) => (\n                    <Form>\n                      <FormGroup>\n                        <Label for=\"firstName\">First Name</Label>\n                        <Field name=\"firstName\" id=\"firstName\"\n                               className={`form-control ${errors.firstName && touched.firstName && 'is-invalid'}`}/>\n                        {errors.firstName && touched.firstName ?\n                          <div className=\"invalid-feedback\">{errors.firstName}</div> : null}\n                      </FormGroup>\n                      <FormGroup>\n                        <Label for=\"lastName\">Last Name</Label>\n                        <Field name=\"lastName\" id=\"lastName\"\n                               className={`form-control ${errors.lastName && touched.lastName && 'is-invalid'}`}/>\n                        {errors.lastName && touched.lastName ?\n                          <div className=\"invalid-feedback\">{errors.lastName}</div> : null}\n                      </FormGroup>\n                      <FormGroup>\n                        <Label for=\"description\">Your description</Label>\n                        <Field name=\"description\" id=\"description\"\n                               className={`form-control ${errors.description && touched.description && 'is-invalid'}`}/>\n                        {errors.description && touched.description ?\n                          <div className=\"invalid-feedback\">{errors.description}</div> : null}\n                      </FormGroup>\n                      <FormGroup>\n                        <Label for=\"company\">Company</Label>\n                        <Field name=\"company\" id=\"company\"\n                               className={`form-control ${errors.company && touched.company && 'is-invalid'}`}/>\n                        {errors.company && touched.company ?\n                          <div className=\"invalid-feedback\">{errors.company}</div> : null}\n                      </FormGroup>\n\n                      <FormGroup>\n                        <Label for=\"jetmanId\">Jetman ID</Label>\n                        <Field name=\"jetmanId\" id=\"jetmanId\"\n                               className={`form-control ${errors.jetmanId && touched.jetmanId && 'is-invalid'}`}/>\n                        {errors.jetmanId && touched.jetmanId ?\n                          <div className=\"invalid-feedback\">{errors.jetmanId}</div> : null}\n                      </FormGroup>\n                      <Button type=\"submit\">Save</Button>\n                    </Form>\n                  )}\n                </Formik>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Fragment>\n    );\n  }\n}\n\nexport default Profile;\n","import {handleError} from './helpers/errorHandler';\n\nconst actionPrefix = 'FETCH_CURRENT_USER';\nconst actionList = [\n  'start',\n  'success',\n  'error'\n];\nexport const actions = {};\nactionList.forEach((item) => {\n  actions[item.toLowerCase()] = `${actionPrefix}_${item.toUpperCase()}`;\n});\n\nexport function fillBrokerInfo(variables) {\n  const query = `mutation($firstName: String, $lastName: String, $description: String!, $company: String!, $jetmanId: String!) {\n    fillBrokerInfo(firstName: $firstName, lastName: $lastName, description: $description, company: $company, jetmanId: $jetmanId) {\n      firstName,\n      lastName\n    }\n  }`;\n  return async (dispatch, getState, {graphqlRequest, history}) => {\n    dispatch({type: actions.start, payload: {}});\n    const response = await graphqlRequest(query, variables);\n    if (response.errors) {\n      dispatch({type: actions.error, payload: {errors: response.errors}});\n      return handleError(response, {history});\n    }\n    dispatch({type: actions.success, payload: {...response.data}});\n    history.replace('/');\n    return {...response.data};\n  };\n}\n\nexport function fetchCurrentUser() {\n  const query = `query {\n    me {\n      login,\n      firstName,\n      lastName,\n      brokerInfo {\n        description,\n        company,\n        jetmanId\n      }\n    }\n  }`;\n  return async (dispatch, getState, {graphqlRequest, history}) => {\n    dispatch({type: actions.start, payload: {}});\n    const response = await graphqlRequest(query);\n    if (response.errors) {\n      dispatch({type: actions.error, payload: {errors: response.errors}});\n      return handleError(response, {history});\n    }\n    dispatch({type: actions.success, payload: {...response.data.me}});\n    return {...response.data.me};\n  };\n}\n","import Profile from '../views/profile/profile';\n\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../redux/actions/graphql/profile';\nimport {bindActionCreators} from 'redux';\n\n\nconst mapStateToProps = (state) => {\n  return state.dashboard;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(actionCreators, dispatch);\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n\n"],"sourceRoot":""}