{"version":3,"sources":["views/pages/register.js","redux/actions/graphql/register.js","containers/register.js"],"names":["Register","state","form","handleChange","e","name","_this","setState","Object","objectSpread","defineProperty","target","value","handleSubmit","preventDefault","props","register","_this2","this","react_default","a","createElement","className","reactstrap_es","xs","onSubmit","md","type","id","placeholder","required","onChange","color","block","NavLink","to","Component","actions","variables","_ref2","asyncToGenerator","regenerator_default","mark","_callee","dispatch","getState","_ref","graphqlRequest","history","response","wrap","_context","prev","next","start","payload","sent","errors","error","abrupt","handleError","success","data","replace","stop","_x","_x2","_x3","apply","arguments","forEach","item","toLowerCase","concat","toUpperCase","connect","me","bindActionCreators","actionCreators"],"mappings":"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","file":"static/js/5.aa583199.chunk.js","sourcesContent":["// import external modules\nimport React, {Component} from 'react';\nimport {NavLink} from 'react-router-dom';\nimport {\n  Row,\n  Col,\n  Input,\n  Form,\n  FormGroup,\n  Button,\n  Label,\n  Card,\n  CardBody,\n  CardFooter\n} from 'reactstrap';\n\nclass Register extends Component {\n  state = {\n    form: {}\n  };\n\n  handleChange = (e, name) => {\n    this.setState({\n      ...this.state,\n      form: {\n        ...this.state.form,\n        [name]: e.target.value\n      }\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const form = this.state.form;\n    this.props.register(form);\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Row className=\"full-height-vh\">\n          <Col xs=\"12\" className=\"d-flex align-items-center justify-content-center\">\n            <Card className=\"gradient-indigo-purple text-center width-400\">\n              <CardBody>\n                <h2 className=\"white py-4\">Register</h2>\n                <Form className=\"pt-2\" onSubmit={this.handleSubmit}>\n                  <FormGroup>\n                    <Col md=\"12\">\n                      <Input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"inputName\"\n                        id=\"inputName\"\n                        placeholder=\"FirstName\"\n                        required\n                        onChange={(e) => this.handleChange(e, 'firstName')}\n                      />\n                    </Col>\n                  </FormGroup>\n                  <FormGroup>\n                    <Col md=\"12\">\n                      <Input\n                        type=\"text\"\n                        className=\"form-control\"\n                        name=\"inputName\"\n                        id=\"inputName\"\n                        placeholder=\"LastName\"\n                        required\n                        onChange={(e) => this.handleChange(e, 'lastName')}\n                      />\n                    </Col>\n                  </FormGroup>\n                  <FormGroup>\n                    <Col md=\"12\">\n                      <Input\n                        type=\"email\"\n                        className=\"form-control\"\n                        name=\"inputEmail\"\n                        id=\"inputEmail\"\n                        placeholder=\"Email\"\n                        required\n                        onChange={(e) => this.handleChange(e, 'login')}\n                      />\n                    </Col>\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Col md=\"12\">\n                      <Input\n                        type=\"password\"\n                        className=\"form-control\"\n                        name=\"inputPass\"\n                        id=\"inputPass\"\n                        placeholder=\"Password\"\n                        required\n                        onChange={(e) => this.handleChange(e, 'password')}\n                      />\n                    </Col>\n                  </FormGroup>\n\n                  <FormGroup>\n                    <Col md=\"12\">\n                      <Button type=\"submit\" color=\"danger\" block className=\"btn-pink btn-raised\">\n                                    Submit\n                      </Button>\n                    </Col>\n                  </FormGroup>\n                </Form>\n              </CardBody>\n              <CardFooter>\n                <div className=\"float-right\">\n                  <NavLink to=\"/signin\" className=\"text-white\">\n                              Login\n                  </NavLink>\n                </div>\n              </CardFooter>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","import {handleError} from './helpers/errorHandler';\n\nconst actionPrefix = 'FETCH_CURRENT_USER';\nconst actionList = [\n  'start',\n  'success',\n  'error'\n];\nexport const actions = {};\nactionList.forEach((item) => {\n  actions[item.toLowerCase()] = `${actionPrefix}_${item.toUpperCase()}`;\n});\n\nexport function register(variables) {\n  const query = `mutation($login: String!, $password: String!, $firstName: String!, $lastName: String!) {\n    register(login: $login, password: $password, firstName: $firstName, lastName: $lastName) {\n      result\n    }\n  }`;\n  return async (dispatch, getState, {graphqlRequest, history}) => {\n    dispatch({type: actions.start, payload: {}});\n    const response = await graphqlRequest(query, variables);\n    if (response.errors) {\n      dispatch({type: actions.error, payload: {errors: response.errors}});\n      return handleError(response, {history});\n    }\n    dispatch({type: actions.success, payload: {...response.data}});\n    history.replace('/');\n    return {...response.data};\n  };\n}\n","import Register from '../views/pages/register';\n\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../redux/actions/graphql/register';\nimport {bindActionCreators} from 'redux';\n\n\nconst mapStateToProps = (state) => {\n  return state.me;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(actionCreators, dispatch);\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\n\n"],"sourceRoot":""}