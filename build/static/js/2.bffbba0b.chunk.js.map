{"version":3,"sources":["components/cards/brokerCard.js","components/cards/minimalStatisticsWithChartCard.js","views/cards/staticCardData.js","components/cards/productsSalesChartCard.js","views/cards/advancedCardData.js","views/dashboard/brokerDashboard.js","redux/actions/graphql/dashboard.js","containers/dashboard.js"],"names":["BrokerCard","react_default","a","createElement","reactstrap_es","sm","className","src","require","alt","tag","Link","to","color","size","this","props","fullName","href","company","PureComponent","MinimalStatisticsChart","iconLeft","iconRight","textDirection","iconSide","children","classnames","cardBgColor","body","statisticsColor","statistics","text","dist_default","data","chartData","type","options","height","axisX","showGrid","showLabel","offset","axisY","low","lineSmooth","ChartistLib","Interpolation","cardinal","tension","fullWidth","StaticCardData","ChartistData","labels","series","ChartistData2","DonutChartData1","name","value","DonutChartData2","DonutChartData3","ProductSalesChartCard","cardTitle","salesText","visitText","productsSalesData","showArea","onlyInteger","scaleMinSpace","listener","created","defs","svg","elem","id","x1","y1","x2","y2","stop-color","parent","AdvancedCardData","WeeklySalesStatisticsBarChartData","MonthlySalesStatisticsBarChartData","HobbiesStatisticsBarChartData","ProjectStatsDonutChartData","progressClassName","UserListData","img","position","flag","DiscoverPeopleList","role","followBtn","followTxt","DailyDietList","list","item","priorityColor","quantity","ShoppingCart","product","status","amount","delete","VisitSalesData","ProductsSalesData","SalesAnalysisData","SalesPerVisitData","UserStatisticData","EarningStatisticData","BrokerDashboard","handleCopyClick","e","preventDefault","stopPropagation","copy","_this","brokerInfo","jetmanId","toastr","success","renderNotFilled","firstName","renderFilled","_this$props","lastName","_this$props$brokerInf","react","md","concat","onClick","brokerCard","xl","minimalStatisticsWithChartCard","react_feather_dist","strokeWidth","productsSalesChartCard","fetchCurrentUser","Component","actions","_ref2","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","getState","_ref","graphqlRequest","history","response","wrap","_context","prev","next","start","payload","sent","errors","error","abrupt","handleError","objectSpread","me","stop","_x","_x2","_x3","apply","arguments","forEach","toLowerCase","toUpperCase","connect","state","dashboard","bindActionCreators","actionCreators","Dashboard"],"mappings":"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","file":"static/js/2.bffbba0b.chunk.js","sourcesContent":["import React, {PureComponent} from 'react';\nimport {Row, Col, Container, Button} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\n\n\n\n// Chsrtis JS\n// Chsrtis CSS\nimport 'chartist/dist/chartist.min.css';\n// Component specific chart CSS\nimport '../../assets/scss/components/cards/userStatisticChartCard.scss';\n\nclass BrokerCard extends PureComponent {\n\n\n  render() {\n    return (\n      <div>\n        <Container>\n          <Row>\n            <Col sm=\"3\" className=\"text-center\">\n              <div>\n                <img\n                  src={require('../../assets/img/avatar_mock.png')}\n                  className=\"bg-danger width-100 rounded-circle img-fluid mb-4\"\n                  alt=\"Card cap 02\"\n                />\n              </div>\n              <div>\n                <Button tag={Link} to=\"/profile\" color=\"info\" className=\"shadow-z-2 gradient-nepal\"\n                  size=\"sm\">Edit profile</Button>\n              </div>\n            </Col>\n            <Col sm=\"9\">\n              <Row>\n                <Col>\n                  <h3 className=\"font-large-1\">\n                    {this.props.fullName}\n                  </h3>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <h5>Broker at <a href=\"#\">{this.props.company}</a></h5>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <span>We help to alleviate the expense and burden of recruiting and subsequent administrative support functions through our crew leasing and recruiting services. </span>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nBrokerCard.propTypes = {\n  fullName: PropTypes.string,\n  department: PropTypes.string,\n  userStatisticData: PropTypes.object\n};\n\nexport default BrokerCard;\n","import React, { PureComponent } from \"react\";\nimport { Card, CardBody, Media } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\n\n//Chsrtis JS \nimport ChartistGraph from \"react-chartist\";\nimport ChartistLib from \"chartist\";\n//Chsrtis CSS\nimport \"chartist/dist/chartist.min.css\";\n//Component specific chart CSS\nimport \"../../assets/scss/components/cards/minimalStatisticsCardWithChart.scss\";\n\nclass MinimalStatisticsChart extends PureComponent {\n   render() {\n      let iconLeft;\n      let iconRight;\n      let textDirection;\n\n      if (this.props.iconSide === \"right\") {\n         iconRight = this.props.children;\n      } else {\n         iconLeft = this.props.children;\n         textDirection = \"text-right\";\n      }\n      return (\n         <Card className={classnames(this.props.cardBgColor)}>\n            <CardBody className=\"pt-2 pb-0\">\n               <Media>\n                  {iconLeft}\n                  <Media body className={classnames(\"white\", textDirection)}>\n                     <h3 className={classnames(\"font-large-1 mb-1\", this.props.statisticsColor)}>{this.props.statistics}</h3>\n                     <span>{this.props.text}</span>\n                  </Media>\n                  {iconRight}\n               </Media>\n            </CardBody>\n            <ChartistGraph\n               className=\"WidgetlineChart WidgetlineChartshadow mb-2\"\n               data={this.props.chartData}\n               type=\"Line\"\n               options={{\n                  height: \"75px\",\n                  axisX: {\n                     showGrid: true,\n                     showLabel: false,\n                     offset: 0\n                  },\n                  axisY: {\n                     showGrid: false,\n                     low: 40,\n                     showLabel: false,\n                     offset: 0\n                  },\n                  lineSmooth: ChartistLib.Interpolation.cardinal({\n                     tension: 0\n                  }),\n                  fullWidth: true\n               }}\n            />\n         </Card>\n      );\n   }\n}\n\nMinimalStatisticsChart.propTypes = {\n   iconSide: PropTypes.string,   \n   statisticsColor: PropTypes.string,\n   statistics: PropTypes.string,\n   cardBgColor: PropTypes.string,\n   text: PropTypes.string,\n   chartData: PropTypes.object\n};\n\nexport default MinimalStatisticsChart;\n","const StaticCardData = {\n   ChartistData: {\n      labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\"],\n      series: [[50, 45, 60, 55, 70, 55, 60, 55, 65, 57, 60, 53, 53]]\n   },\n   ChartistData2: {\n      labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\", \"July\", \"Aug\"],\n      series: [[55, 60, 50, 55, 50, 60, 55, 57]]\n   },\n   DonutChartData1: {\n      series: [\n         {\n            name: \"done\",\n            className: \"ct-done\",\n            value: 10\n         },\n         {\n            name: \"outstanding\",\n            className: \"ct-outstanding\",\n            value: 3\n         }\n      ]\n   },\n   DonutChartData2: {\n      series: [\n         {\n            name: \"done\",\n            className: \"ct-done\",\n            value: 10\n         },\n         {\n            name: \"outstanding\",\n            className: \"ct-outstanding\",\n            value: 3\n         }\n      ]\n   },\n   DonutChartData3: {\n      series: [\n         {\n            name: \"done\",\n            className: \"ct-done\",\n            value: 10\n         },\n         {\n            name: \"outstanding\",\n            className: \"ct-outstanding\",\n            value: 3\n         }\n      ]\n   },\n  \n};\n\nexport { StaticCardData };\n","import React, { PureComponent } from \"react\";\nimport { Card, CardHeader, CardTitle, CardBody } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\n//Chsrtis JS\nimport ChartistGraph from \"react-chartist\";\n//Chsrtis CSS\nimport \"chartist/dist/chartist.min.css\";\n//Component specific chart CSS\nimport \"../../assets/scss/components/cards/productSalesChartCard.scss\";\n\nclass ProductSalesChartCard extends PureComponent {\n   render() {\n      return (\n         <Card>\n            <CardHeader>\n               <CardTitle className=\"mb-0\">{this.props.cardTitle}</CardTitle>\n            </CardHeader>\n            <CardBody className=\"pt-2 pb-0\">\n               <div className=\"chart-info mb-2\">\n                  <span className=\"gradient-blackberry d-inline-block rounded-circle mr-1 p-1\">\n                     {\" \"}\n                  </span>\n                  {this.props.salesText}\n                  <span className=\"gradient-mint d-inline-block rounded-circle mr-1 ml-2 p-1\">\n                     {\" \"}\n                  </span>\n                  {this.props.visitText}\n               </div>\n            </CardBody>\n            <ChartistGraph\n               className=\"height-350 lineArea\"\n               data={this.props.productsSalesData}\n               type=\"Line\"\n               options={{\n                  low: 0,\n                  showArea: true,\n                  fullWidth: true,\n                  onlyInteger: true,\n                  axisY: {\n                     low: 0,\n                     scaleMinSpace: 50,\n                     offset:35,\n                  },\n                  axisX: {\n                     showGrid: false\n                  }\n               }}\n               listener={{\n                  created: data => {\n                     let defs = data.svg.elem(\"defs\");\n                     defs\n                        .elem(\"linearGradient\", {\n                           id: \"gradient\",\n                           x1: 0,\n                           y1: 1,\n                           x2: 1,\n                           y2: 0\n                        })\n                        .elem(\"stop\", {\n                           offset: 0,\n                           \"stop-color\": \"rgba(0, 201, 255, 1)\"\n                        })\n                        .parent()\n                        .elem(\"stop\", {\n                           offset: 1,\n                           \"stop-color\": \"rgba(146, 254, 157, 1)\"\n                        });\n\n                     defs\n                        .elem(\"linearGradient\", {\n                           id: \"gradient1\",\n                           x1: 0,\n                           y1: 1,\n                           x2: 1,\n                           y2: 0\n                        })\n                        .elem(\"stop\", {\n                           offset: 0,\n                           \"stop-color\": \"rgba(132, 60, 247, 1)\"\n                        })\n                        .parent()\n                        .elem(\"stop\", {\n                           offset: 1,\n                           \"stop-color\": \"rgba(56, 184, 242, 1)\"\n                        });\n                  }\n               }}\n            />\n         </Card>\n      );\n   }\n}\n\nProductSalesChartCard.propTypes = {\n   cardTitle: PropTypes.string,\n   salesText: PropTypes.string,\n   visitText: PropTypes.string,\n   productsSalesData: PropTypes.object\n};\n\nexport default ProductSalesChartCard;\n","const AdvancedCardData = {\n   WeeklySalesStatisticsBarChartData: {\n      labels: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n      series: [[80, 85, 75, 65, 63, 70, 82]]\n   },\n   MonthlySalesStatisticsBarChartData: {\n      labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"],\n      series: [[8, 9, 5, 6, 7, 4], [2, 1, 5, 4, 3, 6]]\n   },\n\n   HobbiesStatisticsBarChartData: {\n      labels: [\"Sport\", \"Music\", \"Travel\", \"News\"],\n      series: [[53, 23, 40, 30]]\n   },\n\n   ProjectStatsDonutChartData: {\n      series: [\n         {\n            name: \"Done\",\n            className: \"ct-done\",\n            progressClassName: \"bg-success\",\n            value: 40\n         },\n         {\n            name: \"Progress\",\n            className: \"ct-progress\",\n            progressClassName: \"bg-amber\",\n            value: 15\n         },\n         {\n            name: \"Outstanding\",\n            className: \"ct-outstanding\",\n            progressClassName: \"bg-deep-purple bg-lighten-1\",\n            value: 20\n         },\n         {\n            name: \"Started\",\n            className: \"ct-started\",\n            progressClassName: \"bg-blue\",\n            value: 25\n         }\n      ]\n   },\n   UserListData: {\n      series: [\n         {\n            img: \"https://randomuser.me/api/portraits/med/women/10.jpg\",\n            fullName: \"Jessica Rice\",\n            position: \"UX Designer\",\n            flag: 1\n         },\n         {\n            img: \"https://randomuser.me/api/portraits/med/men/0.jpg\",\n            fullName: \"Jacob Rios\",\n            position: \"HTML Developer\",\n            flag: 0\n         },\n         {\n            img: \"https://randomuser.me/api/portraits/med/men/1.jpg\",\n            fullName: \"Russell Delgado\",\n            position: \"Database Designer\",\n            flag: 0\n         },\n         {\n            img: \"https://randomuser.me/api/portraits/med/women/3.jpg\",\n            fullName: \"Sara McDonald\",\n            position: \"Team Leader\",\n            flag: 1\n         },\n         {\n            img: \"https://randomuser.me/api/portraits/med/men/3.jpg\",\n            fullName: \"Peter Parker\",\n            position: \"UI/UX Designer\",\n            flag: 1\n         }\n      ]\n   },\n   DiscoverPeopleList: {\n      series: [\n         {\n            img: \"https://randomuser.me/api/portraits/med/women/0.jpg\",\n            fullName: \"Jessica Jack\",\n            role: \"Sales\",\n            followBtn: \"gradient-blackberry white\",\n            followTxt: \"Following\"\n         },\n         {\n            img: \"https://randomuser.me/api/portraits/med/women/2.jpg\",\n            fullName: \"Russell Rice\",\n            role: \"Marketing\",\n            followBtn: \"btn-outline-grey\",\n            followTxt: \"Follow\"\n         },\n         {\n            img: \"https://randomuser.me/api/portraits/med/women/3.jpg\",\n            fullName: \"Sara McDo\",\n            role: \"Sales\",\n            followBtn: \"gradient-blackberry white\",\n            followTxt: \"Following\"\n         },\n         {\n            img: \"https://randomuser.me/api/portraits/med/women/9.jpg\",\n            fullName: \"Marshal Jack\",\n            role: \"Marketing\",\n            followBtn: \"gradient-blackberry white\",\n            followTxt: \"Following\"\n         },\n         {\n            img: \"https://randomuser.me/api/portraits/med/men/6.jpg\",\n            fullName: \"Tony Rios\",\n            role: \"Engineering\",\n            followBtn: \"btn-outline-grey\",\n            followTxt: \"Follow\"\n         }\n      ]\n   },\n\n   DailyDietList: {\n      list: [\n         {\n            item: \"Protein Milk\",\n            priorityColor: \"bg-primary\",\n            quantity: 4\n         },\n         {\n            item: \"Oz Water\",\n            priorityColor: \"bg-info\",\n            quantity: 2\n         },\n         {\n            item: \"Vegetable Juice\",\n            priorityColor: \"bg-warning\",\n            quantity: 6\n         },\n         {\n            item: \"Sugar Free Jello-O\",\n            priorityColor: \"bg-success\",\n            quantity: 1\n         },\n         {\n            item: \"Protein Meal\",\n            priorityColor: \"bg-danger\",\n            quantity: 3\n         }\n      ]\n   },\n\n   ShoppingCart: {\n      list: [\n         {\n            img: \"avatar-s-11\",\n            product: \"Ferrero Rocher\",\n            quantity: 2,\n            status: \"active\",\n            amount: \"$19.94\",\n            delete: \"X\"\n         },\n         {\n            img: \"avatar-s-11\",\n            product: \"Headphones\",\n            quantity: 4,\n            status: \"cancled\",\n            amount: \"$8.4\",\n            delete: \"X\"\n         },\n         {\n            img: \"avatar-s-11\",\n            product: \"Camera\",\n            quantity: 1,\n            status: \"active\",\n            amount: \"$20.24\",\n            delete: \"X\"\n         },\n         {\n            img: \"avatar-s-11\",\n            product: \"Beer\",\n            quantity: 6,\n            status: \"active\",\n            amount: \"$1.4\",\n            delete: \"X\"\n         }\n      ]\n   },\n\n   VisitSalesData: {\n      labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      series: [\n         [5, 30, 25, 55, 45, 65, 60, 105, 80, 110, 120, 150],\n         [80, 95, 87, 155, 140, 147, 130, 180, 160, 175, 165, 200]\n      ]\n   },\n\n   ProductsSalesData: {\n      labels: [1, 2, 3, 4, 5, 6, 7, 8],\n      series: [[0, 20, 10, 45, 20, 36, 21, 0], [0, 5, 22, 14, 32, 12, 28, 0]]\n   },\n\n   SalesAnalysisData: {\n      labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\"],\n      series: [[65, 105, 145, 105, 145, 185], [125, 80, 30, 70, 110, 150], [175, 190, 160, 190, 140, 100]]\n   },\n\n   SalesPerVisitData: {\n      labels: [1, 2, 3, 4, 5, 6, 7, 8],\n      series: [[0, 5, 15, 8, 15, 9, 30, 0], [0, 3, 5, 2, 8, 1, 5, 0]]\n   },\n\n   UserStatisticData: {\n      labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\"],\n      series: [[50, 70, 45, 75, 85]]\n   },\n\n   EarningStatisticData: {\n      labels: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\"],\n      series: [[50, 45, 60, 55, 70, 55, 60, 55, 65, 57, 60, 53, 53]]\n   }\n};\n\nexport { AdvancedCardData };\n","import React, {Component, Fragment} from 'react';\nimport {\n  Row,\n  Col,\n  Card,\n  CardBody,\n  CardTitle,\n  CardText,\n  Button\n} from 'reactstrap';\n\n\nimport BrokerCard from '../../components/cards/brokerCard';\nimport MinimalStatisticsChart from '../../components/cards/minimalStatisticsWithChartCard';\nimport {StaticCardData} from '../cards/staticCardData';\nimport * as Icon from 'react-feather';\nimport ProductsSalesChartCard from '../../components/cards/productsSalesChartCard';\nimport {AdvancedCardData} from '../cards/advancedCardData';\nimport {Link} from 'react-router-dom';\nimport {toastr} from 'react-redux-toastr';\nimport copy from 'copy-to-clipboard';\n\nclass BrokerDashboard extends Component {\n  async componentDidMount() {\n    await this.props.fetchCurrentUser();\n  }\n\n  handleCopyClick = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    copy(this.props.brokerInfo.jetmanId);\n    toastr.success('Copied to clipboard!');\n  };\n\n  renderNotFilled = () => {\n    return (\n      <div className=\"text-center\">\n        <h1>Hi {this.props.firstName}!</h1>\n        <h1>You need to fill out your profile information before continue</h1>\n        <Button tag={Link} to=\"/profile\" color=\"info\" className=\"shadow-z-2 gradient-purple-bliss\">Go to\n          Profile</Button>\n      </div>\n    );\n  };\n\n  renderFilled = () => {\n    const {firstName, lastName, brokerInfo = {}} = this.props;\n    return (\n      <Fragment>\n        <Row>\n          <Col sm=\"12\" md=\"12\">\n            <Card>\n              <CardBody className=\"text-center\">\n                <CardTitle>Congratulations {firstName}!</CardTitle>\n                <CardText>\n                  You have completed the creation of Jetman Profile! The Jetman ID was assigned.\n                </CardText>\n                <div>\n                  Your JETMAN ID:\n                </div>\n                <div className=\"text-center\">\n                  <a href={`https://${brokerInfo.jetmanId}.jetman.io`}>{`https://${brokerInfo.jetmanId}.jetman.io`}</a>\n                  <div className=\"pad2\">\n                    <br/>\n                    <Button color=\"info\" className=\"shadow-z-2 gradient-purple-bliss\"\n                            size=\"sm\" onClick={this.handleCopyClick}>Copy</Button>\n                    <span>&nbsp;</span>\n                    <Button color=\"info\" className=\"shadow-z-2 gradient-pomegranate\"\n                            size=\"sm\" onClick={this.handleCopyClick}>Share</Button>\n                  </div>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col sm=\"12\" md=\"12\">\n            <Card>\n              <CardBody>\n                <BrokerCard\n                  fullName={`${firstName} ${lastName}`}\n                  company={brokerInfo.company}\n                />\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <h3>Your Landing Page visits</h3>\n        <Row className=\"row-eq-height\">\n          <Col sm=\"12\" md=\"6\" xl=\"3\">\n            <MinimalStatisticsChart\n              chartData={StaticCardData.ChartistData}\n              cardBgColor=\"gradient-blackberry\"\n              statistics=\"15\"\n              text=\"Today\"\n              iconSide=\"right\"\n            >\n              <Icon.BarChart size={36} strokeWidth=\"1.3\" color=\"#fff\"/>\n            </MinimalStatisticsChart>\n          </Col>\n          <Col sm=\"12\" md=\"6\" xl=\"3\">\n            <MinimalStatisticsChart\n              chartData={StaticCardData.ChartistData}\n              cardBgColor=\"gradient-ibiza-sunset\"\n              statistics=\"98\"\n              text=\"Week\"\n              iconSide=\"right\"\n            >\n              <Icon.BarChart size={36} strokeWidth=\"1.3\" color=\"#fff\"/>\n            </MinimalStatisticsChart>\n          </Col>\n          <Col sm=\"12\" md=\"6\" xl=\"3\">\n            <MinimalStatisticsChart\n              chartData={StaticCardData.ChartistData}\n              cardBgColor=\"gradient-green-teal\"\n              statistics=\"456\"\n              text=\"Month\"\n              iconSide=\"right\"\n            >\n              <Icon.BarChart size={36} strokeWidth=\"1.3\" color=\"#fff\"/>\n            </MinimalStatisticsChart>\n          </Col>\n          <Col sm=\"12\" md=\"6\" xl=\"3\">\n            <MinimalStatisticsChart\n              chartData={StaticCardData.ChartistData}\n              cardBgColor=\"gradient-pomegranate\"\n              statistics=\"4566\"\n              text=\"Total\"\n              iconSide=\"right\"\n            >\n              <Icon.BarChart size={36} strokeWidth=\"1.3\" color=\"#fff\"/>\n            </MinimalStatisticsChart>\n          </Col>\n        </Row>\n        <h3>Requests statistics</h3>\n        <Row>\n          <Col sm=\"12\">\n            <ProductsSalesChartCard\n              productsSalesData={AdvancedCardData.ProductsSalesData}\n              cardTitle=\"Products Sales\"\n              salesText=\"Sales\"\n              visitText=\"Visits\"\n            />\n          </Col>\n        </Row>\n      </Fragment>\n    );\n  };\n\n  render() {\n    const {brokerInfo} = this.props;\n    return brokerInfo ? this.renderFilled() : this.renderNotFilled();\n  }\n}\n\nexport default BrokerDashboard;\n","import {handleError} from './helpers/errorHandler';\n\nconst actionPrefix = 'FETCH_CURRENT_USER';\nconst actionList = [\n  'start',\n  'success',\n  'error'\n];\nexport const actions = {};\nactionList.forEach((item) => {\n  actions[item.toLowerCase()] = `${actionPrefix}_${item.toUpperCase()}`;\n});\n\nexport function fetchCurrentUser() {\n  const query = `query {\n    me {\n      login,\n      firstName,\n      lastName,\n      brokerInfo {\n        description,\n        company,\n        jetmanId\n      }\n    }\n  }`;\n  return async (dispatch, getState, {graphqlRequest, history}) => {\n    dispatch({type: actions.start, payload: {}});\n    const response = await graphqlRequest(query);\n    if (response.errors) {\n      dispatch({type: actions.error, payload: {errors: response.errors}});\n      return handleError(response, {history});\n    }\n    dispatch({type: actions.success, payload: {...response.data.me}});\n    return {...response.data.me};\n  };\n}\n","import Dashboard from '../views/dashboard/brokerDashboard';\n\nimport {connect} from 'react-redux';\nimport * as actionCreators from '../redux/actions/graphql/dashboard';\nimport {bindActionCreators} from 'redux';\n\n\nconst mapStateToProps = (state) => {\n  return state.dashboard;\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(actionCreators, dispatch);\n};\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\n\n"],"sourceRoot":""}